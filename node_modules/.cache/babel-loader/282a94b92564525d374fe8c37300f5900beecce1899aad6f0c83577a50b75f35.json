{"ast":null,"code":"import Web3 from 'web3';\nlet web3;\nlet contract;\nlet userAccount;\nconst contractAddress = '0x382db38aB1409924d9DCA8F786E7e68262331E4c'; // Replace with your deployed contract address\nconst contractABI = [{\n  \"inputs\": [],\n  \"payable\": false,\n  \"stateMutability\": \"nonpayable\",\n  \"type\": \"constructor\"\n}, {\n  \"constant\": true,\n  \"inputs\": [],\n  \"name\": \"get\",\n  \"outputs\": [{\n    \"internalType\": \"string\",\n    \"name\": \"\",\n    \"type\": \"string\"\n  }],\n  \"payable\": false,\n  \"stateMutability\": \"view\",\n  \"type\": \"function\"\n}, {\n  \"constant\": false,\n  \"inputs\": [{\n    \"internalType\": \"string\",\n    \"name\": \"v\",\n    \"type\": \"string\"\n  }],\n  \"name\": \"set\",\n  \"outputs\": [],\n  \"payable\": false,\n  \"stateMutability\": \"nonpayable\",\n  \"type\": \"function\"\n}]; // Replace with your contract ABI\n\n// Initialize web3\nif (window.ethereum) {\n  web3 = new Web3(window.ethereum);\n  window.ethereum.enable().then(() => {\n    web3.eth.getAccounts().then(accounts => {\n      userAccount = accounts[0];\n    });\n  });\n} else {\n  alert(\"Please install Metamask.\");\n}\n\n// Initialize the contract\ncontract = new web3.eth.Contract(contractABI, contractAddress);\nexport const getContract = () => contract;\nexport const getWeb3 = () => web3;\nexport const getUserAccount = () => userAccount;","map":{"version":3,"names":["Web3","web3","contract","userAccount","contractAddress","contractABI","window","ethereum","enable","then","eth","getAccounts","accounts","alert","Contract","getContract","getWeb3","getUserAccount"],"sources":["C:/Users/Anthony Onyeke/Desktop/Dapp/Rental-Agreement-master/src/web3.js"],"sourcesContent":["import Web3 from 'web3';\r\n\r\nlet web3;\r\nlet contract;\r\nlet userAccount;\r\n\r\nconst contractAddress = '0x382db38aB1409924d9DCA8F786E7e68262331E4c'; // Replace with your deployed contract address\r\nconst contractABI = [ {\r\n  \"inputs\": [],\r\n  \"payable\": false,\r\n  \"stateMutability\": \"nonpayable\",\r\n  \"type\": \"constructor\"\r\n},\r\n{\r\n  \"constant\": true,\r\n  \"inputs\": [],\r\n  \"name\": \"get\",\r\n  \"outputs\": [\r\n    {\r\n      \"internalType\": \"string\",\r\n      \"name\": \"\",\r\n      \"type\": \"string\"\r\n    }\r\n  ],\r\n  \"payable\": false,\r\n  \"stateMutability\": \"view\",\r\n  \"type\": \"function\"\r\n},\r\n{\r\n  \"constant\": false,\r\n  \"inputs\": [\r\n    {\r\n      \"internalType\": \"string\",\r\n      \"name\": \"v\",\r\n      \"type\": \"string\"\r\n    }\r\n  ],\r\n  \"name\": \"set\",\r\n  \"outputs\": [],\r\n  \"payable\": false,\r\n  \"stateMutability\": \"nonpayable\",\r\n  \"type\": \"function\"\r\n}]; // Replace with your contract ABI\r\n\r\n// Initialize web3\r\nif (window.ethereum) {\r\n  web3 = new Web3(window.ethereum);\r\n  window.ethereum.enable().then(() => {\r\n    web3.eth.getAccounts().then(accounts => {\r\n      userAccount = accounts[0];\r\n    });\r\n  });\r\n} else {\r\n  alert(\"Please install Metamask.\");\r\n}\r\n\r\n// Initialize the contract\r\ncontract = new web3.eth.Contract(contractABI, contractAddress);\r\n\r\nexport const getContract = () => contract;\r\nexport const getWeb3 = () => web3;\r\nexport const getUserAccount = () => userAccount;\r\n"],"mappings":"AAAA,OAAOA,IAAI,MAAM,MAAM;AAEvB,IAAIC,IAAI;AACR,IAAIC,QAAQ;AACZ,IAAIC,WAAW;AAEf,MAAMC,eAAe,GAAG,4CAA4C,CAAC,CAAC;AACtE,MAAMC,WAAW,GAAG,CAAE;EACpB,QAAQ,EAAE,EAAE;EACZ,SAAS,EAAE,KAAK;EAChB,iBAAiB,EAAE,YAAY;EAC/B,MAAM,EAAE;AACV,CAAC,EACD;EACE,UAAU,EAAE,IAAI;EAChB,QAAQ,EAAE,EAAE;EACZ,MAAM,EAAE,KAAK;EACb,SAAS,EAAE,CACT;IACE,cAAc,EAAE,QAAQ;IACxB,MAAM,EAAE,EAAE;IACV,MAAM,EAAE;EACV,CAAC,CACF;EACD,SAAS,EAAE,KAAK;EAChB,iBAAiB,EAAE,MAAM;EACzB,MAAM,EAAE;AACV,CAAC,EACD;EACE,UAAU,EAAE,KAAK;EACjB,QAAQ,EAAE,CACR;IACE,cAAc,EAAE,QAAQ;IACxB,MAAM,EAAE,GAAG;IACX,MAAM,EAAE;EACV,CAAC,CACF;EACD,MAAM,EAAE,KAAK;EACb,SAAS,EAAE,EAAE;EACb,SAAS,EAAE,KAAK;EAChB,iBAAiB,EAAE,YAAY;EAC/B,MAAM,EAAE;AACV,CAAC,CAAC,CAAC,CAAC;;AAEJ;AACA,IAAIC,MAAM,CAACC,QAAQ,EAAE;EACnBN,IAAI,GAAG,IAAID,IAAI,CAACM,MAAM,CAACC,QAAQ,CAAC;EAChCD,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC,CAAC,CAACC,IAAI,CAAC,MAAM;IAClCR,IAAI,CAACS,GAAG,CAACC,WAAW,CAAC,CAAC,CAACF,IAAI,CAACG,QAAQ,IAAI;MACtCT,WAAW,GAAGS,QAAQ,CAAC,CAAC,CAAC;IAC3B,CAAC,CAAC;EACJ,CAAC,CAAC;AACJ,CAAC,MAAM;EACLC,KAAK,CAAC,0BAA0B,CAAC;AACnC;;AAEA;AACAX,QAAQ,GAAG,IAAID,IAAI,CAACS,GAAG,CAACI,QAAQ,CAACT,WAAW,EAAED,eAAe,CAAC;AAE9D,OAAO,MAAMW,WAAW,GAAGA,CAAA,KAAMb,QAAQ;AACzC,OAAO,MAAMc,OAAO,GAAGA,CAAA,KAAMf,IAAI;AACjC,OAAO,MAAMgB,cAAc,GAAGA,CAAA,KAAMd,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}